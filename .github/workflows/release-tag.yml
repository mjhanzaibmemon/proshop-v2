name: Auto Release Tag

on:
  push:
    branches:
      - master
      - staging
      - dev
      - release

jobs:
  tag_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all tags are available

      - name: Setup Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch latest tags
        run: git fetch --tags

      - name: Determine branch prefix
        run: |
          case "${{ github.ref_name }}" in
            master) BRANCH_PREFIX="production-" ;;  
            staging) BRANCH_PREFIX="staging-v" ;;
            dev) BRANCH_PREFIX="dev-v" ;;
            release) BRANCH_PREFIX="release-v" ;;
            *) echo "Unsupported branch, exiting."; exit 1 ;;
          esac
          echo "BRANCH_PREFIX=$BRANCH_PREFIX" >> $GITHUB_ENV

      - name: Generate new tag
        run: |
          # Pehle latest tag check karna
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E "^${BRANCH_PREFIX}[0-9]+\.[0-9]+\.[0-9]+$" | tail -n 1 || echo "")

          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="${BRANCH_PREFIX}1.0.0"
          else
            IFS='.' read -ra VERSION <<< "${LATEST_TAG#${BRANCH_PREFIX}}"
            PATCH=$((VERSION[2] + 1))
            NEW_TAG="${BRANCH_PREFIX}${VERSION[0]}.${VERSION[1]}.$PATCH"
          fi

          # Check if tag already exists
          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            echo "‚úÖ Tag $NEW_TAG already exists. Skipping tag creation."
            exit 0
          fi

          echo "üÜï Creating New Tag: $NEW_TAG"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "TAG_NAME=$NEW_TAG" >> $GITHUB_ENV

      - name: Verify if Tag Exists Before Release
        run: |
          if [[ -z "${{ env.TAG_NAME }}" ]]; then
            echo "‚ö†Ô∏è No tag was created, skipping release."
            exit 0
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "üöÄ Release: ${{ env.TAG_NAME }}"
          body: |
            ## üåü Release Details
            **Branch:** `${{ github.ref_name }}`
            **Tag:** `${{ env.TAG_NAME }}`
            **Date:** $(date "+%Y-%m-%d %H:%M:%S")

            ---

            ‚úÖ This release was automatically generated by **GitHub Actions**.

          draft: false
          prerelease: false
